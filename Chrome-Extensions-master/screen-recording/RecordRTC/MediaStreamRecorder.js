function MediaStreamRecorder(e,t){function i(){d.timestamps.push((new Date).getTime()),"function"==typeof t.onTimeStamp&&t.onTimeStamp(d.timestamps[d.timestamps.length-1],d.timestamps)}function o(){if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}d=this;if(void 0===e)throw'First argument "MediaStream" is required.';if("undefined"==typeof MediaRecorder)throw"Your browser does not supports Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";if("audio"===(t=t||{mimeType:"video/webm"}).type){if(e.getVideoTracks().length&&e.getAudioTracks().length){var r;navigator.mozGetUserMedia?(r=new MediaStream).addTrack(e.getAudioTracks()[0]):r=new MediaStream(e.getAudioTracks()),e=r}t.mimeType&&-1!==t.mimeType.toString().toLowerCase().indexOf("audio")||(t.mimeType=isChrome?"audio/webm":"audio/ogg"),t.mimeType&&"audio/ogg"!==t.mimeType.toString().toLowerCase()&&navigator.mozGetUserMedia&&(t.mimeType="audio/ogg")}var a=[];this.getArrayOfBlobs=function(){return a},this.record=function(){d.blob=null,d.clearRecordedData(),d.timestamps=[],s=[],a=[];var o=t;t.disableLogs||console.log("Passing following config over MediaRecorder API.",o),n&&(n=null),isChrome&&!isMediaRecorderCompatible()&&(o="video/vp8"),"function"==typeof MediaRecorder.isTypeSupported&&o.mimeType&&(MediaRecorder.isTypeSupported(o.mimeType)||(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",o.mimeType),o.mimeType="audio"===t.type?"audio/webm":"video/webm"));try{n=new MediaRecorder(e,o),t.mimeType=o.mimeType}catch(t){n=new MediaRecorder(e)}o.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in n&&!1===n.canRecordMimeType(o.mimeType)&&(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",o.mimeType)),n.ondataavailable=function(e){e.data&&s.push("ondataavailable: "+bytesToSize(e.data.size)),"number"!=typeof t.timeSlice?!e.data||!e.data.size||e.data.size<100||d.blob?d.recordingCallback&&(d.recordingCallback(new Blob([],{type:n.mimeType||o.mimeType||"video/webm"})),d.recordingCallback=null):(d.blob=t.getNativeBlob?e.data:new Blob([e.data],{type:n.mimeType||o.mimeType||"video/webm"}),d.recordingCallback&&(d.recordingCallback(d.blob),d.recordingCallback=null)):e.data&&e.data.size&&e.data.size>100&&(a.push(e.data),i())},n.onstart=function(){s.push("started")},n.onpause=function(){s.push("paused")},n.onresume=function(){s.push("resumed")},n.onstop=function(){s.push("stopped")},n.onerror=function(e){s.push("error: "+e),t.disableLogs||(-1!==e.name.toString().toLowerCase().indexOf("invalidstate")?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",e):-1!==e.name.toString().toLowerCase().indexOf("notsupported")?console.error("MIME type (",o.mimeType,") is not supported.",e):-1!==e.name.toString().toLowerCase().indexOf("security")?console.error("MediaRecorder security error",e):"OutOfMemory"===e.name?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"IllegalStreamModification"===e.name?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"OtherRecordingError"===e.name?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"GenericError"===e.name?console.error("The UA cannot provide the codec or recording option that has been requested.",e):console.error("MediaRecorder Error",e)),function(e){if(!d.manuallyStopped&&n&&"inactive"===n.state)return delete t.timeslice,void n.start(6e5);setTimeout(void 0,1e3)}(),"inactive"!==n.state&&"stopped"!==n.state&&n.stop()},"number"==typeof t.timeSlice?(i(),n.start(t.timeSlice)):n.start(36e5),t.initCallback&&t.initCallback()},this.timestamps=[],this.stop=function(e){d.manuallyStopped=!0,n&&(this.recordingCallback=function(t){e&&e(t)},"recording"===n.state&&n.stop(),"number"==typeof t.timeSlice&&setTimeout(function(){d.blob=new Blob(a,{type:n.mimeType||t.mimeType||"video/webm"}),d.recordingCallback(d.blob)},100))},this.pause=function(){n&&"recording"===n.state&&n.pause()},this.resume=function(){n&&"paused"===n.state&&n.resume()},this.clearRecordedData=function(){a=[],n=null,d.timestamps=[]};var n;this.getInternalRecorder=function(){return n},this.blob=null,this.getState=function(){return n?n.state||"inactive":"inactive"};var s=[];this.getAllStates=function(){return s},void 0===t.checkForInactiveTracks&&(t.checkForInactiveTracks=!1);var d=this;!function e(){if(n&&!1!==t.checkForInactiveTracks)return!1===o()?(t.disableLogs||console.log("MediaStream seems stopped."),void d.stop()):void setTimeout(e,1e3)}(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}